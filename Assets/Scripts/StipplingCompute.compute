// Each #kernel tells which function to compile; you can have many kernels
//#pragma kernel DebugFlush
#pragma kernel StreamStipples

#define TAU 6.28318530718

uint _MaxStipples;
float _NibSize;
float2 _TexSize;
float4 _PixTrans;

Texture2D<float4> _ScreenTexture;
StructuredBuffer<float2> _Points;
AppendStructuredBuffer<float3> _Particles;
//RWStructuredBuffer<float2> _Output;

[numthreads(256,1,1)]
void StreamStipples (uint3 id : SV_DispatchThreadID)
{
	if (id.x < _MaxStipples) {
        float2x2 T = float2x2(_PixTrans.xy, _PixTrans.zw);
        //float2x2 TI = float2x2(_PixTransInv.xy, _PixTransInv.zw);
		float2 loc = _Points[id.x];
        float2 locT = mul(T, loc);

		float3 col = _ScreenTexture[_TexSize * locT].rgb;
		float luma = 1 - dot(col, float3(0.2126, 0.7152, 0.0722));

		float area = 4.0/id.x;

		if (area > _NibSize / luma) {
			_Particles.Append(float3(loc, luma));
		}
	}

	// if (id.x < _MaxStipples) {
	// 	_Particles.Append(float3(_Points[id.x], 0.0));
	// }
}


// StructuredBuffer<int> _DebugIn;
// RWStructuredBuffer<int> _DebugOut;

// [numthreads(64,1,1)]
// void DebugFlush(uint3 id : SV_DispatchThreadID)
// {
// 	_DebugOut[id.x] = _DebugIn[id.x] * 2;
// }

